#include <Wire.h>
#include <U8g2lib.h> // Assuming you were using U8g2lib for your OLED
#include <SPI.h>
#include <LoRa.h>

// Define the OLED reset pin based on your pinout diagram (GPIO16)
const int OLED_RESET_PIN = 16;

// Define the I2C pins for OLED based on your pinout diagram
const int OLED_SDA_PIN = 4;
const int OLED_SCL_PIN = 15;

// Initialize the U8g2 library for a 128x64 OLED (adjust if yours is different)
// The constructor parameters might need adjustment based on your specific OLED module
U8G2_SSD1306_128X64_NONAME_F_HW_I2C u8g2(U8G2_R0, /* reset=*/ U8X8_PIN_NONE, /* clock=*/ OLED_SCL_PIN, /* data=*/ OLED_SDA_PIN);

// Define LoRa pins (adjust these based on your specific LoRa module and ESP32 wiring)
const int LORA_CS = 18;   // Chip Select pin (using the same as in the user's receiver code)
const int LORA_RST = 14;  // Reset pin (using the same as in the user's receiver code)
const int LORA_IRQ = 26;  // Interrupt pin (DIO0) (using the same as in the user's receiver code)

const int LED_PIN = 25; // Define the LED pin (adjust if needed for your board)

void setup() {
  Serial.begin(115200);
  Serial.println("LoRa Sender with OLED");

  // Initialize the LED pin as an output
  pinMode(LED_PIN, OUTPUT);
  digitalWrite(LED_PIN, LOW); // Start with the LED off

  // Initialize the OLED
  pinMode(OLED_RESET_PIN, OUTPUT);
  digitalWrite(OLED_RESET_PIN, LOW);
  delay(100);
  digitalWrite(OLED_RESET_PIN, HIGH);
  Wire.begin(OLED_SDA_PIN, OLED_SCL_PIN);
  if (!u8g2.begin()) {
    Serial.println("U8g2 initialization failed");
  } else {
    Serial.println("OLED initialized");
    u8g2.setFont(u8g2_font_6x10_tf);
  }

  // Initialize LoRa
  SPI.begin(); // Initialize SPI bus
  LoRa.setPins(LORA_CS, LORA_RST, LORA_IRQ); // Set LoRa pins

  if (!LoRa.begin(915E6)) {
    Serial.println("Starting LoRa failed!");
    u8g2.clearBuffer();
    u8g2.drawStr(0, 15, "LoRa Init");
    u8g2.drawStr(0, 30, "Failed!");
    u8g2.sendBuffer();
    delay(2000); // Wait for a bit before continuing
    return;      // Exit setup, loop will run but LoRa won't be active
  }
  Serial.println("LoRa Initialized");
  u8g2.clearBuffer();
  u8g2.drawStr(0, 15, "LoRa Ready");
  u8g2.drawStr(0, 30, "Sending...");
  u8g2.sendBuffer();
  delay(1000); // Small delay after initializing
}

void loop() {
  Serial.println("Sending packet: Kailangan po namin ng tulong. May nasugatan");

  // Display sending status on OLED
  u8g2.clearBuffer();
  u8g2.drawStr(0, 15, "Sending:");
  u8g2.drawStr(0, 30, "Kailangan po");
  u8g2.drawStr(0, 45, "ng lambing");
  u8g2.sendBuffer();

  // Send packet
  digitalWrite(LED_PIN, HIGH); // Turn LED on while sending
  LoRa.beginPacket();
  LoRa.print("Kailangan po");
  LoRa.print("ng lambingh");
  LoRa.endPacket();
  digitalWrite(LED_PIN, LOW);  // Turn LED off after sending

  delay(5000); // Wait for 5 seconds before sending again
}
